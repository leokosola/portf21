{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","works","setWorks","useEffect","axios","get","then","response","data","className","map","work","href","link","date","type","title","content","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAmCeA,EA/BH,WAAO,IAAD,EACWC,mBAAS,IADpB,mBACRC,EADQ,KACDC,EADC,KAWhB,OARAC,qBAAU,WACRC,IACGC,IAAI,iEACJC,MAAK,SAAAC,GACJL,EAASK,EAASC,WAErB,IAGD,gCACE,4CACA,oBAAIC,UAAU,MAAd,4BACA,qBAAKA,UAAU,cAAf,SACGR,EAAMS,KAAI,SAAAC,GACT,OACA,oBAAGF,UAAU,OAAqBG,KAAMD,EAAKE,KAA7C,UACE,uBAAMJ,UAAU,OAAhB,UAAwBE,EAAKG,KAA7B,SAAoCH,EAAKI,QACzC,6BAAKJ,EAAKK,QACV,4BAAIL,EAAKM,YAHcN,EAAKO,SAQlC,uDAAyB,mBAAGT,UAAU,WAAWG,KAAK,uDAA7B,gCAAzB,8BAA8J,mBAAGA,KAAK,kEAAR,mCAA9J,WClBSO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2d4e2ecf.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport axios from 'axios';\n\nconst App = () => {\n  const [ works, setWorks] = useState([])\n\n  useEffect(() => {\n    axios\n      .get('https://my-json-server.typicode.com/leokosola/worksjson/works')\n      .then(response => {\n        setWorks(response.data)\n      })\n  }, [])\n\n  return (\n    <div>\n      <h1>Leo Kosola</h1>\n      <h1 className='fun'>Portfolio 2021</h1>\n      <div className='item-holder'>\n        {works.map(work => {\n          return (\n          <a className='item' key={work.id} href={work.link}>\n            <span className='date'>{work.date}â€”{work.type}</span>\n            <h2>{work.title}</h2>\n            <p>{work.content}</p>\n          </a>\n          )\n        })}\n      </div>\n      <small>H1 & H2 Typeface: <a className='terminal' href=\"https://github.com/raphaelbastide/Terminal-Grotesque\">Terminal Grotesque</a> by Raphael Bastide (under <a href=\"http://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&id=OFL\">SIL Open Font License</a>)</small>  \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}